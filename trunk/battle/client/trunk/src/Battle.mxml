<?xml version="1.0" encoding="utf-8"?>
<mx:Application addedToStage="init()" width="1000" height="600" backgroundColor="0x000000" xmlns:mx="http://www.adobe.com/2006/mxml" frameRate="24" layout="absolute" xmlns:layer="com.netease.webgame.bitchwar.view.vc.layer.*">
	<mx:Style source="style/defaultStyle.css"/>
	<mx:Style source="style/button.css"/>
	<mx:Style source="style/container.css"/>
	<mx:Style source="style/building.css"/>
	<mx:Style source="style/personal.css"/>
	<mx:Style source="style/list.css"/>
	<mx:Style source="style/text.css"/>
	<mx:Style source="style/progressbar.css"/>
	<mx:Style source="style/scene.css"/>
	<mx:Style source="style/fight.css"/> 
	<mx:Style source="style/heroSelect.css"/>
	<mx:Style source="style/component.css"/> 
	<mx:Script>
		<![CDATA[
			import com.netease.webgame.bitchwar.ApplicationFacade;
			import com.netease.webgame.bitchwar.InnerCommandConstants;
			import com.netease.webgame.bitchwar.constants.Config;
			import com.netease.webgame.bitchwar.constants.Constants;
			import com.netease.webgame.bitchwar.manager.MouseManager;
			import com.netease.webgame.bitchwar.view.vc.component.Creature;
			import com.netease.webgame.core.manager.CFrameProcessManager;

			
			public function init():void {				
				Security.allowDomain("*");
				initContextMenu();
				initManager();
				loadConfig();
			}
			//初始化菜单
			private function initContextMenu():void{
				//右键菜单
				var contextMenu:ContextMenu = new ContextMenu();
				contextMenu.hideBuiltInItems();
				contextMenu.customItems.push(new ContextMenuItem("Build Version: " + Config.version));
				this.contextMenu = contextMenu;
			}
			//初始化全局类
			private function initManager():void{
				MouseManager.getInstance().initialize(stage);
			}
			//载入配置
			private function loadConfig():void{
				// 这里一般都是异步操作。事件响应函数直接写在这里。
				var loader:URLLoader = new URLLoader();
				//配置载入完成
				var loadComplete : Function = function(event:Event) : void {
					loader.removeEventListener(Event.COMPLETE, loadComplete);
					loader.removeEventListener(IOErrorEvent.IO_ERROR, errorHandler);
					var configXML:XML = new XML((event.target as URLLoader).data);
					Config.load(configXML);
					afterConfigLoadComplete();
				}
				//配置载入失败
				var errorHandler : Function = function(e:Event) : void {
					loader.removeEventListener(Event.COMPLETE, loadComplete);
					loader.removeEventListener(IOErrorEvent.IO_ERROR, errorHandler);
				}
				loader.addEventListener(IOErrorEvent.IO_ERROR, errorHandler);
				loader.addEventListener(Event.COMPLETE, loadComplete);		
				var request:URLRequest = new URLRequest(Config.configUrl);
				request.method = URLRequestMethod.POST;
				loader.load(request);
				
			}
			private function afterConfigLoadComplete():void{
				setDefaultConfig();
				startApp();
			}
			private function setDefaultConfig():void{
				Creature.DEFAULT_RES_URL = Config.resUrl+Constants.DEFAULT_CREATURE_RES_URL;
				Creature.RES_URL_PREFIX = Config.resUrl+Constants.CREATURE_RES_URL_PREFIX;
				Creature.RES_URL_POSTFIX = Constants.CREATURE_RES_URL_POSTFIX;
			}
			//启动puremvc
			private function startApp():void{
				ApplicationFacade.getInstance().sendNotification(InnerCommandConstants.START_UP,this);
			}
			
		]]>
	</mx:Script>
	<layer:ApplicationLayer id="gameLayer" width="100%" height="100%" verticalScrollPolicy="off" horizontalScrollPolicy="off" />
	<mx:Canvas id="popupLayer" width="100%" height="100%" mouseEnabled="false" verticalScrollPolicy="off" clipContent="false" horizontalScrollPolicy="off"/>

</mx:Application>
