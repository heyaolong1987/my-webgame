<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" creationComplete="init()" width="100%" height="100%" xmlns:gridClasses="com.netease.webgame.bitchwar.component.gridClasses.*">
	
	<mx:Script>
		<![CDATA[
			import com.netease.webgame.bitchwar.component.core.events.DragDropEvent;
			import com.netease.webgame.bitchwar.managers.DragDropManager;
			import com.netease.webgame.bitchwar.managers.ProToolTipManager;
			import com.netease.webgame.bitchwar.component.gridClasses.gridCellClass.TeamItemCellClass;
			import com.netease.webgame.bitchwar.component.itemClasses.TeamMemberItem;
			import com.netease.webgame.bitchwar.config.constants.ItemConstants;
			import com.netease.webgame.bitchwar.model.proxy.MainPreloadProxy;
			import com.netease.webgame.bitchwar.model.vo.team.TeamMemberVO;
			import com.netease.webgame.bitchwar.util.AssetUtil;
			import com.netease.webgame.bitchwar.util.DragDropFunctionUtil;
			
			import mx.collections.ArrayCollection;

			
			private var proxy:MainPreloadProxy;
			private var interval:int;
			
			
			[Bindable]
			private var teamMembers:ArrayCollection;
			
			
			private function init():void {
				proxy = new MainPreloadProxy();
				proxy.onRegister();
				interval = setInterval(checkResLoader, 1000);
			}
			
			private function checkResLoader():void {
				if(!AssetUtil.villageBuildingRes.complete || !AssetUtil.clanBuildingRes.complete) {
					return;
				}
				clearInterval(interval);
				ProToolTipManager.getInstance().initialize(stage);
				DragDropManager.getInstance().initialize(stage);
				initGrid();
			}
			
			private function initGrid():void {
				var teamMembers:ArrayCollection = new ArrayCollection();
				var member:TeamMemberVO;
				var i:int;
				for(i=0; i<4; i++) {
					member = new TeamMemberVO();
					member.position = i+1;
					teamMembers.addItem(member);
				}
				this.teamMembers = teamMembers;
				memberGrid.initBag(TeamItemCellClass, TeamMemberItem, 5, 1, AssetUtil.getCellBorderImg(), AssetUtil.getCellHighLightImg(), AssetUtil.getCellBorderImg(), 46, 46, 40, 40, 4, 4);
				memberGrid.addEventListener(DragDropEvent.DRAG_DROP, dragDropHandler);
			}
			
			private function dragDropHandler(event:DragDropEvent):void {
				var i:int;
				var member:TeamMemberVO;
				var target:TeamMemberVO = event.dragData as TeamMemberVO;
				for(i=0; i<teamMembers.length; i++) {
					member = teamMembers[i];
					if(event.dragPosition>event.dropPosition) {
						if(member.position>=event.dropPosition && member.position<event.dragPosition) {
							member.position = member.position+1;
							member.teamIndex = member.position;
						}
					} else {
						if(member.position<=event.dropPosition && member.position>event.dragPosition) {
							member.position = member.position-1;
							member.teamIndex = member.position;
						}
					}
				}
				target.position = event.dropPosition;
			}
			
		]]>
	</mx:Script>
	
	<gridClasses:FlexTweenGrid id="memberGrid" 
							   gridType="{ItemConstants.GRID_TEAM_MEMBER}"
							   dataProvider="{teamMembers}" 
							   dropable="true" dragable="true"
							   dropableFunction="{DragDropFunctionUtil.teamMemberDropableFunction}"/>
</mx:Canvas>
